// Database Table (MySQL)
CREATE TABLE Product (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    Price DOUBLE,
    Quantity INT
);
===========================================================================================================================================================================================
// Java Code: ProductCRUDApp.java
import java.sql.*;
import java.util.Scanner;

public class ProductCRUDApp {
    static final String URL = "jdbc:mysql://localhost:3306/your_db";
    static final String USER = "root";
    static final String PASS = "password";

    public static void main(String[] args) {
        try (Connection conn = DriverManager.getConnection(URL, USER, PASS)) {
            conn.setAutoCommit(false);
            Scanner sc = new Scanner(System.in);
            while (true) {
                System.out.println("\n1. Create\n2. Read\n3. Update\n4. Delete\n5. Exit");
                System.out.print("Choose an option: ");
                int choice = sc.nextInt();

                switch (choice) {
                    case 1 -> {
                        System.out.print("Enter ID, Name, Price, Quantity: ");
                        int id = sc.nextInt();
                        String name = sc.next();
                        double price = sc.nextDouble();
                        int qty = sc.nextInt();

                        String insert = "INSERT INTO Product VALUES (?, ?, ?, ?)";
                        try (PreparedStatement ps = conn.prepareStatement(insert)) {
                            ps.setInt(1, id);
                            ps.setString(2, name);
                            ps.setDouble(3, price);
                            ps.setInt(4, qty);
                            ps.executeUpdate();
                            conn.commit();
                            System.out.println("Product inserted.");
                        } catch (SQLException e) {
                            conn.rollback();
                            e.printStackTrace();
                        }
                    }
                    case 2 -> {
                        String query = "SELECT * FROM Product";
                        try (Statement stmt = conn.createStatement();
                             ResultSet rs = stmt.executeQuery(query)) {
                            while (rs.next()) {
                                System.out.println(rs.getInt(1) + " " + rs.getString(2)
                                        + " " + rs.getDouble(3) + " " + rs.getInt(4));
                            }
                        }
                    }
                    case 3 -> {
                        System.out.print("Enter Product ID to update Price: ");
                        int id = sc.nextInt();
                        System.out.print("Enter new Price: ");
                        double price = sc.nextDouble();
                        String update = "UPDATE Product SET Price = ? WHERE ProductID = ?";
                        try (PreparedStatement ps = conn.prepareStatement(update)) {
                            ps.setDouble(1, price);
                            ps.setInt(2, id);
                            ps.executeUpdate();
                            conn.commit();
                            System.out.println("Product updated.");
                        } catch (SQLException e) {
                            conn.rollback();
                            e.printStackTrace();
                        }
                    }
                    case 4 -> {
                        System.out.print("Enter Product ID to delete: ");
                        int id = sc.nextInt();
                        String delete = "DELETE FROM Product WHERE ProductID = ?";
                        try (PreparedStatement ps = conn.prepareStatement(delete)) {
                            ps.setInt(1, id);
                            ps.executeUpdate();
                            conn.commit();
                            System.out.println("Product deleted.");
                        } catch (SQLException e) {
                            conn.rollback();
                            e.printStackTrace();
                        }
                    }
                    case 5 -> {
                        System.out.println("Exiting...");
                        return;
                    }
                    default -> System.out.println("Invalid option.");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}



